<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <Nullable>enable</Nullable>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <ImplicitUsings>enable</ImplicitUsings>
  </PropertyGroup>
  <PropertyGroup>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <NoWarn>$(NoWarn);1591</NoWarn>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="EntityFramework.DynamicLinq" Version="1.6.0.2"/>
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="7.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Swashbuckle.AspNetCore" Version="8.1.1"/>
  </ItemGroup>
  <ItemGroup>
    <Content Remove="$(SpaRoot)**"/>
    <None Remove="$(SpaRoot)**"/>
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**"/>
  </ItemGroup>
  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode"/>
    </Exec>
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install"/>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE."/>
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..."/>
  </Target>
  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install"/>
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --configuration production"/>
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**"/>
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
  <Target Name="GenerateSwagger" AfterTargets="Build">
    <Exec Command="dotnet tool list -g | findstr swashbuckle.aspnetcore.cli" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="SwashbuckleInstalled" />
    </Exec>
    <Exec Condition="'$(SwashbuckleInstalled)' != '0'"
      Command="dotnet tool install --global Swashbuckle.AspNetCore.Cli" />

    <MakeDir Directories="swagger" />
    <Exec Command="swagger tofile --output ./swagger/swagger.json &quot;$(TargetPath)&quot; v1" />
  </Target>
  <Target Name="GenerateAngularClient" AfterTargets="Build">
    <!-- 2. 安裝 ng-openapi-gen（僅在 Debug 模式安裝） -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install ng-openapi-gen --save-dev" />

    <!-- 4. 執行 ng-openapi-gen 將 swagger.json 轉成 Angular service -->
    <Exec Command="npx ng-openapi-gen --input ../swagger/swagger.json --output src/app/api"
      WorkingDirectory="$(SpaRoot)" />
  </Target>
  
</Project>